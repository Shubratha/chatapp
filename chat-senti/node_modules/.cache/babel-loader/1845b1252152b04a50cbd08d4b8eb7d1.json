{"ast":null,"code":"import _String$fromCodePoint from \"@babel/runtime-corejs2/core-js/string/from-code-point\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport ChatMessage from './ChatMessage';\nvar SAD_EMOJI = [55357, 56864];\nvar HAPPY_EMOJI = [55357, 56832];\nvar NEUTRAL_EMOJI = [55357, 56848];\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      chats: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyUp\", function (evt) {\n      var value = evt.target.value;\n\n      if (evt.keyCode === 13 && !evt.shiftKey) {\n        var user = _this.props.activeUser;\n        var chat = {\n          user: user,\n          message: value,\n          timestamp: +new Date()\n        };\n        evt.target.value = '';\n        axios.post('/message', chat);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n        cluster: process.env.PUSHER_APP_CLUSTER,\n        encrypted: true\n      });\n      this.channel = this.pusher.subscribe('chat-room1');\n      this.channel.bind('new-message', function (_ref) {\n        var _ref$chat = _ref.chat,\n            chat = _ref$chat === void 0 ? null : _ref$chat;\n        var chats = _this2.state.chats;\n        chat && chats.push(chat);\n\n        _this2.setState({\n          chats: chats\n        });\n      });\n      this.pusher.connection.bind('connected', function () {\n        axios.post('/messages').then(function (response) {\n          console.log(response);\n          var chats = response.data.messages;\n\n          _this2.setState({\n            chats: chats\n          });\n        }).catch(function (error) {\n          console.log(error.response);\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pusher.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return this.props.activeUser && React.createElement(Fragment, null, React.createElement(\"div\", {\n        className: \"border-bottom border-gray w-100 d-flex align-items-center bg-white\",\n        style: {\n          height: 90\n        }\n      }, React.createElement(\"h2\", {\n        className: \"text-dark mb-0 mx-4 px-2\"\n      }, this.props.activeUser)), React.createElement(\"div\", {\n        className: \"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\",\n        style: {\n          height: 'calc(100% - 180px)',\n          overflowY: 'scroll'\n        }\n      }, this.state.chats.map(function (chat, index) {\n        var previous = Math.max(0, index - 1);\n        var previousChat = _this3.state.chats[previous];\n        var position = chat.user === _this3.props.activeUser ? \"right\" : \"left\";\n        var isFirst = previous === index;\n        var inSequence = chat.user === previousChat.user;\n        var hasDelay = Math.ceil((chat.timestamp - previousChat.timestamp) / (1000 * 60)) > 1;\n        var mood = chat.sentiment > 0 ? HAPPY_EMOJI : chat.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI;\n        return React.createElement(Fragment, {\n          key: index\n        }, (isFirst || !inSequence || hasDelay) && React.createElement(\"div\", {\n          className: \"d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-\".concat(position),\n          style: {\n            fontSize: '0.9rem'\n          }\n        }, React.createElement(\"span\", {\n          className: \"d-block\",\n          style: {\n            fontSize: '1.6rem'\n          }\n        }, _String$fromCodePoint.apply(String, mood)), React.createElement(\"span\", null, chat.user || 'Anonymous')), React.createElement(ChatMessage, {\n          message: chat.message,\n          position: position\n        }));\n      })), React.createElement(\"div\", {\n        className: \"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\",\n        style: {\n          minHeight: 90\n        }\n      }, React.createElement(\"textarea\", {\n        className: \"form-control px-3 py-2\",\n        onKeyUp: this.handleKeyUp,\n        placeholder: \"Enter a chat message\",\n        style: {\n          resize: 'none'\n        }\n      })));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport default Chat;","map":{"version":3,"sources":["C:\\Users\\shubr\\Documents\\Projects\\chat-senti\\components\\Chat.js"],"names":["React","Component","Fragment","axios","Pusher","ChatMessage","SAD_EMOJI","HAPPY_EMOJI","NEUTRAL_EMOJI","Chat","chats","evt","value","target","keyCode","shiftKey","user","props","activeUser","chat","message","timestamp","Date","post","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","state","push","setState","connection","then","response","console","log","data","messages","catch","error","disconnect","height","overflowY","map","index","previous","Math","max","previousChat","position","isFirst","inSequence","hasDelay","ceil","mood","sentiment","fontSize","String","minHeight","handleKeyUp","resize"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Pusher from 'pusher-js';\r\nimport ChatMessage from './ChatMessage';\r\n\r\nconst SAD_EMOJI = [55357, 56864];\r\nconst HAPPY_EMOJI = [55357, 56832];\r\nconst NEUTRAL_EMOJI = [55357, 56848];\r\n\r\nclass Chat extends Component {\r\n\r\n  state = { chats: [] }\r\n\r\n  componentDidMount() {\r\n\r\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\r\n      cluster: process.env.PUSHER_APP_CLUSTER,\r\n      encrypted: true\r\n    });\r\n\r\n    this.channel = this.pusher.subscribe('chat-room1');\r\n\r\n    this.channel.bind('new-message', ({ chat = null }) => {\r\n      const { chats } = this.state;\r\n      chat && chats.push(chat);\r\n      this.setState({ chats });\r\n    });\r\n\r\n    this.pusher.connection.bind('connected', () => {\r\n      axios.post('/messages')\r\n        .then(response => {\r\n          console.log(response)\r\n          const chats = response.data.messages;\r\n          this.setState({ chats });\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response)\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.pusher.disconnect();\r\n  }\r\n\r\n  handleKeyUp = evt => {\r\n    const value = evt.target.value;\r\n\r\n    if (evt.keyCode === 13 && !evt.shiftKey) {\r\n      const { activeUser: user } = this.props;\r\n      const chat = { user, message: value, timestamp: +new Date };\r\n\r\n      evt.target.value = '';\r\n      axios.post('/message', chat);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (this.props.activeUser && <Fragment>\r\n\r\n      <div className=\"border-bottom border-gray w-100 d-flex align-items-center bg-white\" style={{ height: 90 }}>\r\n        <h2 className=\"text-dark mb-0 mx-4 px-2\">{this.props.activeUser}</h2>\r\n      </div>\r\n\r\n      <div className=\"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\" style={{ height: 'calc(100% - 180px)', overflowY: 'scroll' }}>\r\n\r\n        {this.state.chats.map((chat, index) => {\r\n\r\n          const previous = Math.max(0, index - 1);\r\n          const previousChat = this.state.chats[previous];\r\n          const position = chat.user === this.props.activeUser ? \"right\" : \"left\";\r\n\r\n          const isFirst = previous === index;\r\n          const inSequence = chat.user === previousChat.user;\r\n          const hasDelay = Math.ceil((chat.timestamp - previousChat.timestamp) / (1000 * 60)) > 1;\r\n\r\n          const mood = chat.sentiment > 0 ? HAPPY_EMOJI : (chat.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI);\r\n\r\n          return (\r\n            <Fragment key={index}>\r\n\r\n              { (isFirst || !inSequence || hasDelay) && (\r\n                <div className={`d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-${position}`} style={{ fontSize: '0.9rem' }}>\r\n                  <span className=\"d-block\" style={{ fontSize: '1.6rem' }}>\r\n                    {String.fromCodePoint(...mood)}\r\n                  </span>\r\n                  <span>{chat.user || 'Anonymous'}</span>\r\n                </div>\r\n              ) }\r\n\r\n              <ChatMessage message={chat.message} position={position} />\r\n\r\n            </Fragment>\r\n          );\r\n\r\n        })}\r\n\r\n      </div>\r\n\r\n      <div className=\"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\" style={{ minHeight: 90 }}>\r\n        <textarea className=\"form-control px-3 py-2\" onKeyUp={this.handleKeyUp} placeholder=\"Enter a chat message\" style={{ resize: 'none' }}></textarea>\r\n      </div>\r\n\r\n    </Fragment> )\r\n  }\r\n\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}